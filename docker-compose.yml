version: "3.9"

services:
  web:
    container_name: nextjs-web
    build:
      context: ./web-repo
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - NEXT_PUBLIC_WS_URL=ws://websocket:7070
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - backend
      - websocket
    networks:
      - vconnect
    volumes:
      - ./web-repo:/app

  backend:
    container_name: backend-api
    build:
      context: ./backend-repo
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - postgres
    networks:
      - vconnect
    volumes:
      - ./backend-repo:/app

  websocket:
    container_name: websocket-server
    build:
      context: ./websocket-repo
      dockerfile: Dockerfile
    ports:
      - "7070:7070"
    networks:
      - vconnect
    volumes:
      - ./websocket-repo:/app

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - vconnect

volumes:
  pgdata:

networks:
  vconnect:
    driver: bridge
